.search_count_loaders.hidden
  - search_types.each do |type|
    .search_count_loader{ data: { target: ".#{type.underscore}_count_target", load_path: fetch_count_search_path(params.slice(:q).merge(type: type)) } }

.page-header
  = form_tag search_path, method: :get, class: 'search_form' do
    .row
      .col-lg-3
        %h1 Search

      .col-lg-8
        = search_field_tag :q, params[:q], class: 'form-control cl-lg-8', placeholder: 'Search users or repos'
        = hidden_field_tag :type, search_type

      .col-lg-1.visible-lg-block
        = button_tag 'Search', class: 'btn btn-sm btn-info search_button'

.row
  .col-lg-3
    %ul.nav.nav-pills.nav-stacked.search_menu.visible-lg-block
      - search_types.each do |type|
        %li{ class: ('active' if type == search_type) }
          = link_to url_for(params.slice(:q).merge(type: type)) do
            = type
            %span.badge.hidden.pull-right{ class: "#{type.underscore}_count_target" }
              0
    %ul.nav.nav-pills.search_menu.hidden-lg
      - search_types.each do |type|
        %li{ class: ('active' if type == search_type) }
          = link_to url_for(params.slice(:q).merge(type: type)) do
            - case type
            - when 'Organizations'
              Orgs
            - when 'Repositories'
              Repos
            - else
              = type
            %span.badge.hidden{ class: "#{type.underscore}_count_target" }
              0

  .col-lg-9
    - case search_type
    - when 'Users'
      = render 'show_users', users: @users
    - when 'Organizations'
      = render 'show_organizations', orgs: @orgs
    - when 'Repositories'
      = render 'show_repositories', repos: @repos
